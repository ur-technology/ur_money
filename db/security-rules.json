{
    "rules": {
        //disallow writing anything in the db
        ".write": false,
        //disallow reading anything in the db
        ".read": false,
        "phoneAuthenticationQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    ".write": "(newData.exists() && newData.child('phone').exists()) || (data.exists() && data.child('userId').val()===auth.uid)",
                    "_state": {
                        // allow reading verification result of a particular record
                        ".read": true
                    },
                    "verificationResult": {
                        // allow reading verification result of a particular record
                        ".read": true
                    }
                }
            }
        },
        "phoneLookupQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    //allows to write and update only if the authenticated user writes its own data
                    ".write": "(newData.exists() && newData.child('userId').val()===auth.uid) || (data.exists() && data.child('userId').val()===auth.uid)",
                    //allows read only if the authenticated user reads its own data
                    ".read": "data.child('userId').val()===auth.uid"
                }
            }
        },
        "chatMessageCopyingQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    //allows to write and update only if the authenticated user writes its own data
                    ".write": "(newData.exists() && newData.child('userId').val()===auth.uid) || (data.exists() && data.child('userId').val()===auth.uid)",
                    //allows read only if the authenticated user reads its own data
                    ".read": "data.child('userId').val()===auth.uid"
                }
            }
        },
        "chatSummaryCopyingQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    //allows to write and update only if the authenticated user writes its own data
                    ".write": "(newData.exists() && newData.child('userId').val()===auth.uid) || (data.exists() && data.child('userId').val()===auth.uid)",
                    //allows read only if the authenticated user reads its own data
                    ".read": "data.child('userId').val()===auth.uid"
                }
            }
        },
        "invitationQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    //allows to write and update only if the authenticated user writes its own data
                    ".write": "(newData.exists() && newData.child('sponsorUserId').val()===auth.uid) || (data.exists() && data.child('userId').val()===auth.uid)",
                    //allows read only if the authenticated user reads its own data
                    ".read": "data.child('userId').val()===auth.uid"
                }
            }
        },
        "urBlockQueue": {
            "tasks": {
                ".indexOn": "_state"
            }
        },
        "users": {
            ".indexOn": ["phone", "wallet/address"],
            //alow read and write to authenticated users only and only the user data
            "$uid": {
                ".read": "$uid===auth.uid",
                ".write": "$uid===auth.uid",
                "transactions": {
                    ".indexOn": ["sortKey"]
                },
                "events": {
                    ".indexOn": "notificationProcessed"
                }
            },

        }
    }
}
