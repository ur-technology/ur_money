{
    "rules": {
        // disallow writing anything in the db
        ".write": false,
        // disallow reading anything in the db
        ".read": false,

        "version": {
            ".write": false,
            ".read": true,
        },
        "phoneAuthenticationQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    ".write": "(newData.exists() && newData.child('phone').exists()) || (data.exists() && data.child('userId').val()===auth.uid)",
                    "_state": {
                        // allow reading verification result of a particular record
                        ".read": true
                    },
                    "verificationResult": {
                        // allow reading verification result of a particular record
                        ".read": true
                    }
                }
            }
        },

        "phoneLookupQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    // allow write only if the authenticated user is writing his own data
                    ".write": "(newData.exists() && newData.child('userId').val()===auth.uid) || (data.exists() && data.child('userId').val()===auth.uid)",
                    // allow read only if the authenticated user is reading his own data
                    ".read": "data.child('userId').val()===auth.uid"
                }
            }
        },

        "chatMessageCopyingQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    // allow write only if the authenticated user is writing his own data
                    ".write": "(newData.exists() && newData.child('userId').val()===auth.uid) || (data.exists() && data.child('userId').val()===auth.uid)",
                    // allow read only if the authenticated user is reading his own data
                    ".read": "data.child('userId').val()===auth.uid"
                }
            }
        },

        "chatSummaryCopyingQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    // allow write only if the authenticated user is writing his own data
                    ".write": "(newData.exists() && newData.child('userId').val()===auth.uid) || (data.exists() && data.child('userId').val()===auth.uid)",
                    // allow read only if the authenticated user is reading his own data
                    ".read": "data.child('userId').val()===auth.uid"
                }
            }
        },

        "identityVerificationQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    // allow write only if the authenticated user is writing his own data
                    /*".write": "(newData.exists() || data.exists() ) && $task===auth.uid",*/
                    ".write": true,
                    // allow read only if the authenticated user is reading his own data
                    ".read": "data.child('userId').val()===auth.uid",

                    "result": {
                        // allow reading verification result of a particular record
                        ".read": true
                        /*".read": "$task===auth.uid"*/
                    }

                }
            }
        },

        "identityAnnouncementQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    // allow write only if the authenticated user is writing his own data
                    /*".write": "(newData.exists() || data.exists() ) && $task===auth.uid",*/
                    ".write": true,
                    // allow read only if the authenticated user is reading his own data
                    ".read": "data.child('userId').val()===auth.uid",

                    "result": {
                        // allow reading verification result of a particular record
                        ".read": "$task===auth.uid"
                    }

                }
            }
        },

        "invitationQueue": {
            "tasks": {
                ".indexOn": "_state",
                "$task": {
                    // allow write only if the authenticated user is writing his own data
                    ".write": "(newData.exists() && newData.child('sponsorUserId').val()===auth.uid) || (data.exists() && data.child('userId').val()===auth.uid)",
                    // allow read only if the authenticated user is reading his own data
                    ".read": "data.child('userId').val()===auth.uid"
                }
            }
        },

        "urTransactionImportQueue": {
            "tasks": {
                ".indexOn": "_state"
            }
        },

        "users": {
            ".indexOn": ["phone", "wallet/address"],
            // allow read or write only if the authenticated user is accessing his own user record
            "$uid": {
                ".read": "$uid===auth.uid",
                ".write": "$uid===auth.uid",
                "transactions": {
                    ".indexOn": ["sortKey"]
                },
                "events": {
                    ".indexOn": "notificationProcessed"
                }
            },

        }
    }
}
